apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar-deployment
  namespace: {{ NAMESPACE }}
{% if ANNOTATIONS is defined and ANNOTATIONS|bool %}
  annotations:
{% if RELOADER is defined and RELOADER|bool %}
    reloader.stakater.com/auto: "true"
{% endif %}
{% endif %}
  labels:
    app: calendar
    app.kubernetes.io/part-of: schulcloud-verbund
    app.kubernetes.io/version: {{ SCHULCLOUD_CALENDAR_IMAGE_TAG }}
    app.kubernetes.io/name: calendar
    app.kubernetes.io/component: calendar
    app.kubernetes.io/managed-by: ansible
    git.branch: {{ SCHULCLOUD_CALENDAR_BRANCH_NAME }}
    git.repo: {{ SCHULCLOUD_CALENDAR_REPO_NAME }}
spec:
  replicas: {{ CALENDAR_REPLICAS|default("1", true) }}
  selector:
    matchLabels:
      app: calendar
  template:
    metadata:
      labels:
        app: calendar
        app.kubernetes.io/part-of: schulcloud-verbund
        app.kubernetes.io/version: {{ SCHULCLOUD_CALENDAR_IMAGE_TAG }}
        app.kubernetes.io/name: calendar
        app.kubernetes.io/component: calendar
        app.kubernetes.io/managed-by: ansible
        git.branch: {{ SCHULCLOUD_CALENDAR_BRANCH_NAME }}
        git.repo: {{ SCHULCLOUD_CALENDAR_REPO_NAME }}
    spec:
      securityContext:
        #readOnlyRootFilesystem: true
        # run as user node (uid 1000)
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
      os:
        name: linux
      containers:
      - name: calendar
        image: {{ SCHULCLOUD_CALENDAR_IMAGE }}:{{ SCHULCLOUD_CALENDAR_IMAGE_TAG }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        envFrom:
        - secretRef:
            name: calendar-secret
        - configMapRef:
            name: calendar-configmap
{% if WITH_BRANCH_POSTGRES_DB_MANAGEMENT is defined and WITH_BRANCH_POSTGRES_DB_MANAGEMENT|bool %}
        - secretRef:
            name: pg-calendar-secret
        env:
        - name: DB_PASSWORD
          value: "$(DB_USER_PASSWORD)"
        - name: DB_USERNAME
          value: "$(DB_USER)"
        - name: DB_DATABASE
          value: "$(DB_NAME)"
{% endif %}
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 3000
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 4
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: 3000
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        startupProbe:
          failureThreshold: 4
          httpGet:
            path: /ping
            port: 3000
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 4
        resources:
          limits:
            cpu: {{ CALENDAR_CPU_LIMITS|default("1000m", true) }}
            memory: {{ CALENDAR_MEMORY_LIMITS|default("1Gi", true) }}
          requests:
            cpu: {{ CALENDAR_CPU_REQUESTS|default("100m", true) }}
            memory: {{ CALENDAR_MEMORY_REQUESTS|default("128Mi", true) }}
{% if AFFINITY_ENABLE is defined and AFFINITY_ENABLE|bool %}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 9
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/part-of
                  operator: In
                  values:
                  - schulcloud-verbund
              topologyKey: "kubernetes.io/hostname"
              namespaceSelector: {}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
{% if ANIT_AFFINITY_NODEPOOL_ENABLE is defined and ANIT_AFFINITY_NODEPOOL_ENABLE|bool %}
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - calendar
              topologyKey: {{ ANIT_AFFINITY_NODEPOOL_TOPOLOGY_KEY }}
{% endif %}
          - weight: 20
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - calendar
              topologyKey: "topology.kubernetes.io/zone"
{% endif %}
